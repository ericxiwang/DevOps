apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mysql-service.fullname" . }}
  labels:
    {{- include "mysql-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mysql-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mysql-service.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "mysql-service.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: root-password
          ports:
            - name: http
              containerPort: {{ .Values.ports.containerPort }}
              protocol: TCP
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql

            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d

            - name: mysql-initdb
              mountPath: /etc/mysql/my.cnf
              subPath: my.cnf
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim

        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config
            items:
              - key: initdb.sql
                path: initdb.sql
              - key: my.cnf
                path: my.cnf

