user root;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;
# Load dynamic modules. See /usr/share/nginx/README.dynamic.
# include /usr/share/nginx/modules/*.conf;
events {
    worker_connections 1024;
}
http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;
    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    # include /etc/nginx/conf.d/*.conf;
    
server {
  listen 80;
  server_name st.blueicecloud.com;
  return 301 https://$server_name$request_uri;
}
server {
  listen 443 ssl;
  server_name st.blueicecloud.com;
  ssl on;
  add_header Strict-Transport-Security “max-age=31536000”;
  ssl_certificate /etc/nginx/ssl/blueicecloud.crt;
  ssl_certificate_key /etc/nginx/ssl/blueicecloud.key;
  ssl_prefer_server_ciphers on;
  fastcgi_param HTTPS on;
  root  /usr/share/nginx/html/smart-terminal;
  client_max_body_size 200M;
  # Load configuration files for the default server block.
  # include /etc/nginx/default.d/*.conf;
  #add_header 'Access-Control-Allow-Origin' '*' always;
  #add_header 'Access-Control-Allow-Origin' 'http://localhost:4200' always;
  #add_header 'Access-Control-Allow-Headers';
  add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
  #add_header 'Access-Control-Allow-Credentials' 'true' always;
  
  location / {
    try_files $uri /index.html;
  }
	
  location /test {
    root	/usr/share/nginx/html/smart-terminal;
  }
  location /docs {
    alias /usr/share/nginx/html/smart-terminal/docs;
  }
  
  location /api {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_read_timeout 120s;
    proxy_send_timeout 120s;
    if ( -f /data/ready ) {
      proxy_pass http://127.0.0.1:8333;
    }
    if ( !-f /data/ready ) {
      proxy_pass http://127.0.0.1:8333;
    }
  }
  
  location /sse/ {
        proxy_set_header Host $host;
        proxy_pass http://127.0.0.1:8333;
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        chunked_transfer_encoding off;
        proxy_buffering off;
        proxy_cache off;
  }
  
  location ~* ^/(js|styles|fonts|images|templates)/ {
        gzip_static on;
        expires max;
        add_header Cache-Control public;
  }
  
  location /version {
        gzip_static on;
        expires max;
        add_header Cache-Control public;
  }
  
  error_page 404 /404.html;
    location = /40x.html {
    }
  error_page 500 502 503 504 /50x.html;
    location = /50x.html {
    }
  }
# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2 default_server;
#        listen       [::]:443 ssl http2 default_server;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        location / {
#        }
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }
}
